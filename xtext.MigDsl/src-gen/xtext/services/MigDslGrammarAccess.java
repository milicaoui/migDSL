/*
 * generated by Xtext 2.27.0
 */
package xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MigDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class MigrationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.Migration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMigrationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMappingsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMappingsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMappingsMappingParserRuleCall_3_0 = (RuleCall)cMappingsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRelationaldbAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRelationaldbRelationalDbParserRuleCall_5_0 = (RuleCall)cRelationaldbAssignment_5.eContents().get(0);
		private final Assignment cMongodbAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMongodbMongoDbParserRuleCall_6_0 = (RuleCall)cMongodbAssignment_6.eContents().get(0);
		private final Assignment cOptionsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOptionsOptionsParserRuleCall_7_0 = (RuleCall)cOptionsAssignment_7.eContents().get(0);
		
		//Migration returns Migration:
		//    {Migration}
		//    'mappings' '{' (mappings+=Mapping)* '}'
		//    (relationaldb=RelationalDb)?
		//    (mongodb=MongoDb)?
		//    (options=Options)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Migration}
		//'mappings' '{' (mappings+=Mapping)* '}'
		//(relationaldb=RelationalDb)?
		//(mongodb=MongoDb)?
		//(options=Options)?
		public Group getGroup() { return cGroup; }
		
		//{Migration}
		public Action getMigrationAction_0() { return cMigrationAction_0; }
		
		//'mappings'
		public Keyword getMappingsKeyword_1() { return cMappingsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(mappings+=Mapping)*
		public Assignment getMappingsAssignment_3() { return cMappingsAssignment_3; }
		
		//Mapping
		public RuleCall getMappingsMappingParserRuleCall_3_0() { return cMappingsMappingParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
		
		//(relationaldb=RelationalDb)?
		public Assignment getRelationaldbAssignment_5() { return cRelationaldbAssignment_5; }
		
		//RelationalDb
		public RuleCall getRelationaldbRelationalDbParserRuleCall_5_0() { return cRelationaldbRelationalDbParserRuleCall_5_0; }
		
		//(mongodb=MongoDb)?
		public Assignment getMongodbAssignment_6() { return cMongodbAssignment_6; }
		
		//MongoDb
		public RuleCall getMongodbMongoDbParserRuleCall_6_0() { return cMongodbMongoDbParserRuleCall_6_0; }
		
		//(options=Options)?
		public Assignment getOptionsAssignment_7() { return cOptionsAssignment_7; }
		
		//Options
		public RuleCall getOptionsOptionsParserRuleCall_7_0() { return cOptionsOptionsParserRuleCall_7_0; }
	}
	public class OptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.Options");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNEWLINETerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cOptionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDataTypeMigrationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cDataTypeMigrationDataTypeMigrationKeyword_2_0 = (Keyword)cDataTypeMigrationAssignment_2.eContents().get(0);
		private final Assignment cAllowAdditionalFieldsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cAllowAdditionalFieldsAllowAdditionalFieldsKeyword_3_0 = (Keyword)cAllowAdditionalFieldsAssignment_3.eContents().get(0);
		
		//Options returns Options:
		//    NEWLINE 'options'
		//    DataTypeMigration?='DataTypeMigration'
		//    AllowAdditionalFields?='AllowAdditionalFields'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//NEWLINE 'options'
		//DataTypeMigration?='DataTypeMigration'
		//AllowAdditionalFields?='AllowAdditionalFields'
		public Group getGroup() { return cGroup; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_0() { return cNEWLINETerminalRuleCall_0; }
		
		//'options'
		public Keyword getOptionsKeyword_1() { return cOptionsKeyword_1; }
		
		//DataTypeMigration?='DataTypeMigration'
		public Assignment getDataTypeMigrationAssignment_2() { return cDataTypeMigrationAssignment_2; }
		
		//'DataTypeMigration'
		public Keyword getDataTypeMigrationDataTypeMigrationKeyword_2_0() { return cDataTypeMigrationDataTypeMigrationKeyword_2_0; }
		
		//AllowAdditionalFields?='AllowAdditionalFields'
		public Assignment getAllowAdditionalFieldsAssignment_3() { return cAllowAdditionalFieldsAssignment_3; }
		
		//'AllowAdditionalFields'
		public Keyword getAllowAdditionalFieldsAllowAdditionalFieldsKeyword_3_0() { return cAllowAdditionalFieldsAllowAdditionalFieldsKeyword_3_0; }
	}
	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.Constraint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUniqueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNotNullParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPrimaryKeyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cForeignKeyParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Constraint returns Constraint:
		//    Unique | NotNull | PrimaryKey | ForeignKey;
		@Override public ParserRule getRule() { return rule; }
		
		//Unique | NotNull | PrimaryKey | ForeignKey
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Unique
		public RuleCall getUniqueParserRuleCall_0() { return cUniqueParserRuleCall_0; }
		
		//NotNull
		public RuleCall getNotNullParserRuleCall_1() { return cNotNullParserRuleCall_1; }
		
		//PrimaryKey
		public RuleCall getPrimaryKeyParserRuleCall_2() { return cPrimaryKeyParserRuleCall_2; }
		
		//ForeignKey
		public RuleCall getForeignKeyParserRuleCall_3() { return cForeignKeyParserRuleCall_3; }
	}
	public class RelationalDbElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.RelationalDb");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNEWLINETerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSourceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cNEWLINETerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cDbAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDbEStringParserRuleCall_3_0 = (RuleCall)cDbAssignment_3.eContents().get(0);
		private final Keyword cSolidusKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cHostAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cHostEStringParserRuleCall_5_0 = (RuleCall)cHostAssignment_5.eContents().get(0);
		private final Keyword cSolidusKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPortAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPortEStringParserRuleCall_7_0 = (RuleCall)cPortAssignment_7.eContents().get(0);
		private final Keyword cSolidusKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cUsernameAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cUsernameEStringParserRuleCall_9_0 = (RuleCall)cUsernameAssignment_9.eContents().get(0);
		private final Keyword cSolidusKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cPasswordAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPasswordEStringParserRuleCall_11_0 = (RuleCall)cPasswordAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final RuleCall cNEWLINETerminalRuleCall_12_0 = (RuleCall)cGroup_12.eContents().get(0);
		private final Assignment cTablesAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cTablesTableParserRuleCall_12_1_0 = (RuleCall)cTablesAssignment_12_1.eContents().get(0);
		private final Group cGroup_12_2 = (Group)cGroup_12.eContents().get(2);
		private final RuleCall cNEWLINETerminalRuleCall_12_2_0 = (RuleCall)cGroup_12_2.eContents().get(0);
		private final Assignment cTablesAssignment_12_2_1 = (Assignment)cGroup_12_2.eContents().get(1);
		private final RuleCall cTablesTableParserRuleCall_12_2_1_0 = (RuleCall)cTablesAssignment_12_2_1.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		private final Keyword cConstraintsKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final RuleCall cNEWLINETerminalRuleCall_15_0 = (RuleCall)cGroup_15.eContents().get(0);
		private final Assignment cConstraintsAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cConstraintsConstraintParserRuleCall_15_1_0 = (RuleCall)cConstraintsAssignment_15_1.eContents().get(0);
		private final Group cGroup_15_2 = (Group)cGroup_15.eContents().get(2);
		private final RuleCall cNEWLINETerminalRuleCall_15_2_0 = (RuleCall)cGroup_15_2.eContents().get(0);
		private final Assignment cConstraintsAssignment_15_2_1 = (Assignment)cGroup_15_2.eContents().get(1);
		private final RuleCall cConstraintsConstraintParserRuleCall_15_2_1_0 = (RuleCall)cConstraintsAssignment_15_2_1.eContents().get(0);
		
		//RelationalDb returns RelationalDb:
		//    NEWLINE 'source' NEWLINE
		//    (db=EString)? '/'(host=EString)? '/'(port=EString)? '/'(username=EString)? '/'(password=EString)?
		//    (
		//     NEWLINE tables+=Table (
		//     NEWLINE tables+=Table)*
		//    )
		//    NEWLINE 'constraints'
		//    (
		//     NEWLINE constraints+=Constraint (
		//     NEWLINE constraints+=Constraint)*
		//    )
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//NEWLINE 'source' NEWLINE
		//(db=EString)? '/'(host=EString)? '/'(port=EString)? '/'(username=EString)? '/'(password=EString)?
		//(
		// NEWLINE tables+=Table (
		// NEWLINE tables+=Table)*
		//)
		//NEWLINE 'constraints'
		//(
		// NEWLINE constraints+=Constraint (
		// NEWLINE constraints+=Constraint)*
		//)
		public Group getGroup() { return cGroup; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_0() { return cNEWLINETerminalRuleCall_0; }
		
		//'source'
		public Keyword getSourceKeyword_1() { return cSourceKeyword_1; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_2() { return cNEWLINETerminalRuleCall_2; }
		
		//(db=EString)?
		public Assignment getDbAssignment_3() { return cDbAssignment_3; }
		
		//EString
		public RuleCall getDbEStringParserRuleCall_3_0() { return cDbEStringParserRuleCall_3_0; }
		
		//'/'
		public Keyword getSolidusKeyword_4() { return cSolidusKeyword_4; }
		
		//(host=EString)?
		public Assignment getHostAssignment_5() { return cHostAssignment_5; }
		
		//EString
		public RuleCall getHostEStringParserRuleCall_5_0() { return cHostEStringParserRuleCall_5_0; }
		
		//'/'
		public Keyword getSolidusKeyword_6() { return cSolidusKeyword_6; }
		
		//(port=EString)?
		public Assignment getPortAssignment_7() { return cPortAssignment_7; }
		
		//EString
		public RuleCall getPortEStringParserRuleCall_7_0() { return cPortEStringParserRuleCall_7_0; }
		
		//'/'
		public Keyword getSolidusKeyword_8() { return cSolidusKeyword_8; }
		
		//(username=EString)?
		public Assignment getUsernameAssignment_9() { return cUsernameAssignment_9; }
		
		//EString
		public RuleCall getUsernameEStringParserRuleCall_9_0() { return cUsernameEStringParserRuleCall_9_0; }
		
		//'/'
		public Keyword getSolidusKeyword_10() { return cSolidusKeyword_10; }
		
		//(password=EString)?
		public Assignment getPasswordAssignment_11() { return cPasswordAssignment_11; }
		
		//EString
		public RuleCall getPasswordEStringParserRuleCall_11_0() { return cPasswordEStringParserRuleCall_11_0; }
		
		//(
		// NEWLINE tables+=Table (
		// NEWLINE tables+=Table)*
		//)
		public Group getGroup_12() { return cGroup_12; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_12_0() { return cNEWLINETerminalRuleCall_12_0; }
		
		//tables+=Table
		public Assignment getTablesAssignment_12_1() { return cTablesAssignment_12_1; }
		
		//Table
		public RuleCall getTablesTableParserRuleCall_12_1_0() { return cTablesTableParserRuleCall_12_1_0; }
		
		//(
		//    NEWLINE tables+=Table)*
		public Group getGroup_12_2() { return cGroup_12_2; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_12_2_0() { return cNEWLINETerminalRuleCall_12_2_0; }
		
		//tables+=Table
		public Assignment getTablesAssignment_12_2_1() { return cTablesAssignment_12_2_1; }
		
		//Table
		public RuleCall getTablesTableParserRuleCall_12_2_1_0() { return cTablesTableParserRuleCall_12_2_1_0; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_13() { return cNEWLINETerminalRuleCall_13; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_14() { return cConstraintsKeyword_14; }
		
		//(
		// NEWLINE constraints+=Constraint (
		// NEWLINE constraints+=Constraint)*
		//)
		public Group getGroup_15() { return cGroup_15; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_15_0() { return cNEWLINETerminalRuleCall_15_0; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_15_1() { return cConstraintsAssignment_15_1; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_15_1_0() { return cConstraintsConstraintParserRuleCall_15_1_0; }
		
		//(
		//    NEWLINE constraints+=Constraint)*
		public Group getGroup_15_2() { return cGroup_15_2; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_15_2_0() { return cNEWLINETerminalRuleCall_15_2_0; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_15_2_1() { return cConstraintsAssignment_15_2_1; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_15_2_1_0() { return cConstraintsConstraintParserRuleCall_15_2_1_0; }
	}
	public class MongoDbElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.MongoDb");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMongoDbAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cTargetKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cNEWLINETerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cDbAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDbEStringParserRuleCall_4_0 = (RuleCall)cDbAssignment_4.eContents().get(0);
		private final Keyword cSolidusKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cHostAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cHostEStringParserRuleCall_6_0 = (RuleCall)cHostAssignment_6.eContents().get(0);
		private final Keyword cSolidusKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPortAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPortEStringParserRuleCall_8_0 = (RuleCall)cPortAssignment_8.eContents().get(0);
		private final Keyword cSolidusKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cUsernameAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cUsernameEStringParserRuleCall_10_0 = (RuleCall)cUsernameAssignment_10.eContents().get(0);
		private final Keyword cSolidusKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cPasswordAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cPasswordEStringParserRuleCall_12_0 = (RuleCall)cPasswordAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final RuleCall cNEWLINETerminalRuleCall_13_0 = (RuleCall)cGroup_13.eContents().get(0);
		private final Assignment cCollectionsAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cCollectionsMngCollectionParserRuleCall_13_1_0 = (RuleCall)cCollectionsAssignment_13_1.eContents().get(0);
		private final Group cGroup_13_2 = (Group)cGroup_13.eContents().get(2);
		private final RuleCall cNEWLINETerminalRuleCall_13_2_0 = (RuleCall)cGroup_13_2.eContents().get(0);
		private final Assignment cCollectionsAssignment_13_2_1 = (Assignment)cGroup_13_2.eContents().get(1);
		private final RuleCall cCollectionsMngCollectionParserRuleCall_13_2_1_0 = (RuleCall)cCollectionsAssignment_13_2_1.eContents().get(0);
		
		//MongoDb returns MongoDb:
		//    {MongoDb}
		//    NEWLINE
		//    'target' NEWLINE
		//    (db=EString)? '/'(host=EString)? '/'(port=EString)? '/'(username=EString)? '/'(password=EString)?
		//    (
		//    NEWLINE collections+=MngCollection (
		//    NEWLINE collections+=MngCollection    )*
		//    )?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{MongoDb}
		//NEWLINE
		//'target' NEWLINE
		//(db=EString)? '/'(host=EString)? '/'(port=EString)? '/'(username=EString)? '/'(password=EString)?
		//(
		//NEWLINE collections+=MngCollection (
		//NEWLINE collections+=MngCollection    )*
		//)?
		public Group getGroup() { return cGroup; }
		
		//{MongoDb}
		public Action getMongoDbAction_0() { return cMongoDbAction_0; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_1() { return cNEWLINETerminalRuleCall_1; }
		
		//'target'
		public Keyword getTargetKeyword_2() { return cTargetKeyword_2; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_3() { return cNEWLINETerminalRuleCall_3; }
		
		//(db=EString)?
		public Assignment getDbAssignment_4() { return cDbAssignment_4; }
		
		//EString
		public RuleCall getDbEStringParserRuleCall_4_0() { return cDbEStringParserRuleCall_4_0; }
		
		//'/'
		public Keyword getSolidusKeyword_5() { return cSolidusKeyword_5; }
		
		//(host=EString)?
		public Assignment getHostAssignment_6() { return cHostAssignment_6; }
		
		//EString
		public RuleCall getHostEStringParserRuleCall_6_0() { return cHostEStringParserRuleCall_6_0; }
		
		//'/'
		public Keyword getSolidusKeyword_7() { return cSolidusKeyword_7; }
		
		//(port=EString)?
		public Assignment getPortAssignment_8() { return cPortAssignment_8; }
		
		//EString
		public RuleCall getPortEStringParserRuleCall_8_0() { return cPortEStringParserRuleCall_8_0; }
		
		//'/'
		public Keyword getSolidusKeyword_9() { return cSolidusKeyword_9; }
		
		//(username=EString)?
		public Assignment getUsernameAssignment_10() { return cUsernameAssignment_10; }
		
		//EString
		public RuleCall getUsernameEStringParserRuleCall_10_0() { return cUsernameEStringParserRuleCall_10_0; }
		
		//'/'
		public Keyword getSolidusKeyword_11() { return cSolidusKeyword_11; }
		
		//(password=EString)?
		public Assignment getPasswordAssignment_12() { return cPasswordAssignment_12; }
		
		//EString
		public RuleCall getPasswordEStringParserRuleCall_12_0() { return cPasswordEStringParserRuleCall_12_0; }
		
		//(
		//NEWLINE collections+=MngCollection (
		//NEWLINE collections+=MngCollection    )*
		//)?
		public Group getGroup_13() { return cGroup_13; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_13_0() { return cNEWLINETerminalRuleCall_13_0; }
		
		//collections+=MngCollection
		public Assignment getCollectionsAssignment_13_1() { return cCollectionsAssignment_13_1; }
		
		//MngCollection
		public RuleCall getCollectionsMngCollectionParserRuleCall_13_1_0() { return cCollectionsMngCollectionParserRuleCall_13_1_0; }
		
		//(
		//   NEWLINE collections+=MngCollection    )*
		public Group getGroup_13_2() { return cGroup_13_2; }
		
		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_13_2_0() { return cNEWLINETerminalRuleCall_13_2_0; }
		
		//collections+=MngCollection
		public Assignment getCollectionsAssignment_13_2_1() { return cCollectionsAssignment_13_2_1; }
		
		//MngCollection
		public RuleCall getCollectionsMngCollectionParserRuleCall_13_2_1_0() { return cCollectionsMngCollectionParserRuleCall_13_2_1_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class TableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.Table");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cColumnsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cColumnsColumnParserRuleCall_3_0_0 = (RuleCall)cColumnsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cColumnsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cColumnsColumnParserRuleCall_3_1_1_0 = (RuleCall)cColumnsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Table returns Table:
		//    {Table}
		//    name=EString
		//    '(' (columns+=Column ( "," columns+=Column)*)? ')'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Table}
		//name=EString
		//'(' (columns+=Column ( "," columns+=Column)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//{Table}
		public Action getTableAction_0() { return cTableAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//(columns+=Column ( "," columns+=Column)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//columns+=Column
		public Assignment getColumnsAssignment_3_0() { return cColumnsAssignment_3_0; }
		
		//Column
		public RuleCall getColumnsColumnParserRuleCall_3_0_0() { return cColumnsColumnParserRuleCall_3_0_0; }
		
		//( "," columns+=Column)*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }
		
		//columns+=Column
		public Assignment getColumnsAssignment_3_1_1() { return cColumnsAssignment_3_1_1; }
		
		//Column
		public RuleCall getColumnsColumnParserRuleCall_3_1_1_0() { return cColumnsColumnParserRuleCall_3_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class ColumnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.Column");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cColumnAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Column returns Column:
		//    {Column}
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Column}
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{Column}
		public Action getColumnAction_0() { return cColumnAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class UniqueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.Unique");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUniqueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cUniqueColumnsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUniqueColumnsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cUniqueColumnsColumnCrossReference_4_0 = (CrossReference)cUniqueColumnsAssignment_4.eContents().get(0);
		private final RuleCall cUniqueColumnsColumnEStringParserRuleCall_4_0_1 = (RuleCall)cUniqueColumnsColumnCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cUniqueColumnsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cUniqueColumnsColumnCrossReference_5_1_0 = (CrossReference)cUniqueColumnsAssignment_5_1.eContents().get(0);
		private final RuleCall cUniqueColumnsColumnEStringParserRuleCall_5_1_0_1 = (RuleCall)cUniqueColumnsColumnCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Unique returns Unique:
		//    'Unique:'
		//    name=EString
		//    'uniqueColumns' '(' uniqueColumns+=[Column|EString] ( "," uniqueColumns+=[Column|EString])* ')'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Unique:'
		//name=EString
		//'uniqueColumns' '(' uniqueColumns+=[Column|EString] ( "," uniqueColumns+=[Column|EString])* ')'
		public Group getGroup() { return cGroup; }
		
		//'Unique:'
		public Keyword getUniqueKeyword_0() { return cUniqueKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'uniqueColumns'
		public Keyword getUniqueColumnsKeyword_2() { return cUniqueColumnsKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//uniqueColumns+=[Column|EString]
		public Assignment getUniqueColumnsAssignment_4() { return cUniqueColumnsAssignment_4; }
		
		//[Column|EString]
		public CrossReference getUniqueColumnsColumnCrossReference_4_0() { return cUniqueColumnsColumnCrossReference_4_0; }
		
		//EString
		public RuleCall getUniqueColumnsColumnEStringParserRuleCall_4_0_1() { return cUniqueColumnsColumnEStringParserRuleCall_4_0_1; }
		
		//( "," uniqueColumns+=[Column|EString])*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//uniqueColumns+=[Column|EString]
		public Assignment getUniqueColumnsAssignment_5_1() { return cUniqueColumnsAssignment_5_1; }
		
		//[Column|EString]
		public CrossReference getUniqueColumnsColumnCrossReference_5_1_0() { return cUniqueColumnsColumnCrossReference_5_1_0; }
		
		//EString
		public RuleCall getUniqueColumnsColumnEStringParserRuleCall_5_1_0_1() { return cUniqueColumnsColumnEStringParserRuleCall_5_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class NotNullElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.NotNull");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNotNullKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColumnKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cColumnAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cColumnColumnCrossReference_3_0 = (CrossReference)cColumnAssignment_3.eContents().get(0);
		private final RuleCall cColumnColumnEStringParserRuleCall_3_0_1 = (RuleCall)cColumnColumnCrossReference_3_0.eContents().get(1);
		
		//NotNull returns NotNull:
		//    'NotNull:'
		//    name=EString
		//    'column' column=[Column|EString]
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'NotNull:'
		//name=EString
		//'column' column=[Column|EString]
		public Group getGroup() { return cGroup; }
		
		//'NotNull:'
		public Keyword getNotNullKeyword_0() { return cNotNullKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'column'
		public Keyword getColumnKeyword_2() { return cColumnKeyword_2; }
		
		//column=[Column|EString]
		public Assignment getColumnAssignment_3() { return cColumnAssignment_3; }
		
		//[Column|EString]
		public CrossReference getColumnColumnCrossReference_3_0() { return cColumnColumnCrossReference_3_0; }
		
		//EString
		public RuleCall getColumnColumnEStringParserRuleCall_3_0_1() { return cColumnColumnEStringParserRuleCall_3_0_1; }
	}
	public class PrimaryKeyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.PrimaryKey");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPKKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cKeyColumnsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cKeyColumnsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cKeyColumnsColumnCrossReference_4_0 = (CrossReference)cKeyColumnsAssignment_4.eContents().get(0);
		private final RuleCall cKeyColumnsColumnEStringParserRuleCall_4_0_1 = (RuleCall)cKeyColumnsColumnCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cKeyColumnsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cKeyColumnsColumnCrossReference_5_1_0 = (CrossReference)cKeyColumnsAssignment_5_1.eContents().get(0);
		private final RuleCall cKeyColumnsColumnEStringParserRuleCall_5_1_0_1 = (RuleCall)cKeyColumnsColumnCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//PrimaryKey returns PrimaryKey:
		//    'PK:'
		//    name=EString
		//    'keyColumns' '(' keyColumns+=[Column|EString] ( "," keyColumns+=[Column|EString])* ')'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'PK:'
		//name=EString
		//'keyColumns' '(' keyColumns+=[Column|EString] ( "," keyColumns+=[Column|EString])* ')'
		public Group getGroup() { return cGroup; }
		
		//'PK:'
		public Keyword getPKKeyword_0() { return cPKKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'keyColumns'
		public Keyword getKeyColumnsKeyword_2() { return cKeyColumnsKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//keyColumns+=[Column|EString]
		public Assignment getKeyColumnsAssignment_4() { return cKeyColumnsAssignment_4; }
		
		//[Column|EString]
		public CrossReference getKeyColumnsColumnCrossReference_4_0() { return cKeyColumnsColumnCrossReference_4_0; }
		
		//EString
		public RuleCall getKeyColumnsColumnEStringParserRuleCall_4_0_1() { return cKeyColumnsColumnEStringParserRuleCall_4_0_1; }
		
		//( "," keyColumns+=[Column|EString])*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//keyColumns+=[Column|EString]
		public Assignment getKeyColumnsAssignment_5_1() { return cKeyColumnsAssignment_5_1; }
		
		//[Column|EString]
		public CrossReference getKeyColumnsColumnCrossReference_5_1_0() { return cKeyColumnsColumnCrossReference_5_1_0; }
		
		//EString
		public RuleCall getKeyColumnsColumnEStringParserRuleCall_5_1_0_1() { return cKeyColumnsColumnEStringParserRuleCall_5_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class ForeignKeyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.ForeignKey");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cReferencingAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferencingColumnCrossReference_1_0 = (CrossReference)cReferencingAssignment_1.eContents().get(0);
		private final RuleCall cReferencingColumnEStringParserRuleCall_1_0_1 = (RuleCall)cReferencingColumnCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cReferencingAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cReferencingColumnCrossReference_2_1_0 = (CrossReference)cReferencingAssignment_2_1.eContents().get(0);
		private final RuleCall cReferencingColumnEStringParserRuleCall_2_1_0_1 = (RuleCall)cReferencingColumnCrossReference_2_1_0.eContents().get(1);
		private final Keyword cREFERENCESKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRefrencedAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRefrencedColumnCrossReference_4_0 = (CrossReference)cRefrencedAssignment_4.eContents().get(0);
		private final RuleCall cRefrencedColumnEStringParserRuleCall_4_0_1 = (RuleCall)cRefrencedColumnCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRefrencedAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cRefrencedColumnCrossReference_5_1_0 = (CrossReference)cRefrencedAssignment_5_1.eContents().get(0);
		private final RuleCall cRefrencedColumnEStringParserRuleCall_5_1_0_1 = (RuleCall)cRefrencedColumnCrossReference_5_1_0.eContents().get(1);
		
		//ForeignKey returns ForeignKey:
		//    name=EString
		//    referencing+=[Column|EString] ( "," referencing+=[Column|EString])* 'REFERENCES' refrenced+=[Column|EString] ( "," refrenced+=[Column|EString])*
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString
		//referencing+=[Column|EString] ( "," referencing+=[Column|EString])* 'REFERENCES' refrenced+=[Column|EString] ( "," refrenced+=[Column|EString])*
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//referencing+=[Column|EString]
		public Assignment getReferencingAssignment_1() { return cReferencingAssignment_1; }
		
		//[Column|EString]
		public CrossReference getReferencingColumnCrossReference_1_0() { return cReferencingColumnCrossReference_1_0; }
		
		//EString
		public RuleCall getReferencingColumnEStringParserRuleCall_1_0_1() { return cReferencingColumnEStringParserRuleCall_1_0_1; }
		
		//( "," referencing+=[Column|EString])*
		public Group getGroup_2() { return cGroup_2; }
		
		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//referencing+=[Column|EString]
		public Assignment getReferencingAssignment_2_1() { return cReferencingAssignment_2_1; }
		
		//[Column|EString]
		public CrossReference getReferencingColumnCrossReference_2_1_0() { return cReferencingColumnCrossReference_2_1_0; }
		
		//EString
		public RuleCall getReferencingColumnEStringParserRuleCall_2_1_0_1() { return cReferencingColumnEStringParserRuleCall_2_1_0_1; }
		
		//'REFERENCES'
		public Keyword getREFERENCESKeyword_3() { return cREFERENCESKeyword_3; }
		
		//refrenced+=[Column|EString]
		public Assignment getRefrencedAssignment_4() { return cRefrencedAssignment_4; }
		
		//[Column|EString]
		public CrossReference getRefrencedColumnCrossReference_4_0() { return cRefrencedColumnCrossReference_4_0; }
		
		//EString
		public RuleCall getRefrencedColumnEStringParserRuleCall_4_0_1() { return cRefrencedColumnEStringParserRuleCall_4_0_1; }
		
		//( "," refrenced+=[Column|EString])*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//refrenced+=[Column|EString]
		public Assignment getRefrencedAssignment_5_1() { return cRefrencedAssignment_5_1; }
		
		//[Column|EString]
		public CrossReference getRefrencedColumnCrossReference_5_1_0() { return cRefrencedColumnCrossReference_5_1_0; }
		
		//EString
		public RuleCall getRefrencedColumnEStringParserRuleCall_5_1_0_1() { return cRefrencedColumnEStringParserRuleCall_5_1_0_1; }
	}
	public class MngCollectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.MngCollection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMngCollectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cFieldsFieldParserRuleCall_3_0_0 = (RuleCall)cFieldsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cFieldsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cFieldsFieldParserRuleCall_3_1_1_0 = (RuleCall)cFieldsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MngCollection returns MngCollection:
		//    {MngCollection}
		//    name=EString
		//    '{'
		//        ( fields+=Field ("," fields+=Field)* )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{MngCollection}
		//name=EString
		//'{'
		//    ( fields+=Field ("," fields+=Field)* )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{MngCollection}
		public Action getMngCollectionAction_0() { return cMngCollectionAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//( fields+=Field ("," fields+=Field)* )?
		public Group getGroup_3() { return cGroup_3; }
		
		//fields+=Field
		public Assignment getFieldsAssignment_3_0() { return cFieldsAssignment_3_0; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_3_0_0() { return cFieldsFieldParserRuleCall_3_0_0; }
		
		//("," fields+=Field)*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }
		
		//fields+=Field
		public Assignment getFieldsAssignment_3_1_1() { return cFieldsAssignment_3_1_1; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_3_1_1_0() { return cFieldsFieldParserRuleCall_3_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.Field");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFieldAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeFieldTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFieldsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFieldsFieldParserRuleCall_3_1_0 = (RuleCall)cFieldsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cFieldsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cFieldsFieldParserRuleCall_3_2_1_0 = (RuleCall)cFieldsAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//Field returns Field:
		//    {Field}
		//    (type=FieldType)?
		//    name=EString
		//    ('{' fields+=Field ("," fields+=Field)* '}' )?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Field}
		//(type=FieldType)?
		//name=EString
		//('{' fields+=Field ("," fields+=Field)* '}' )?
		public Group getGroup() { return cGroup; }
		
		//{Field}
		public Action getFieldAction_0() { return cFieldAction_0; }
		
		//(type=FieldType)?
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//FieldType
		public RuleCall getTypeFieldTypeEnumRuleCall_1_0() { return cTypeFieldTypeEnumRuleCall_1_0; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('{' fields+=Field ("," fields+=Field)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//fields+=Field
		public Assignment getFieldsAssignment_3_1() { return cFieldsAssignment_3_1; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_3_1_0() { return cFieldsFieldParserRuleCall_3_1_0; }
		
		//("," fields+=Field)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//fields+=Field
		public Assignment getFieldsAssignment_3_2_1() { return cFieldsAssignment_3_2_1; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_3_2_1_0() { return cFieldsFieldParserRuleCall_3_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
	}
	public class MappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.Mapping");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDirectMappingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNestingListParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNestingObjectParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Mapping returns Mapping:
		//    DirectMapping | NestingList | NestingObject;
		@Override public ParserRule getRule() { return rule; }
		
		//DirectMapping | NestingList | NestingObject
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DirectMapping
		public RuleCall getDirectMappingParserRuleCall_0() { return cDirectMappingParserRuleCall_0; }
		
		//NestingList
		public RuleCall getNestingListParserRuleCall_1() { return cNestingListParserRuleCall_1; }
		
		//NestingObject
		public RuleCall getNestingObjectParserRuleCall_2() { return cNestingObjectParserRuleCall_2; }
	}
	public class DirectMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.DirectMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDirectMappingAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		private final Keyword cOutputKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOutputAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOutputEStringParserRuleCall_4_0 = (RuleCall)cOutputAssignment_4.eContents().get(0);
		private final Keyword cInputKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cColumnAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cColumnColumnCrossReference_6_0 = (CrossReference)cColumnAssignment_6.eContents().get(0);
		private final RuleCall cColumnColumnEStringParserRuleCall_6_0_1 = (RuleCall)cColumnColumnCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//DirectMapping returns DirectMapping:
		//    {DirectMapping}
		//    '{'
		//        ('name:' name=EString)?
		//        'output:' output=EString
		//        'input:' column=[Column|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DirectMapping}
		//'{'
		//    ('name:' name=EString)?
		//    'output:' output=EString
		//    'input:' column=[Column|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{DirectMapping}
		public Action getDirectMappingAction_0() { return cDirectMappingAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('name:' name=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'name:'
		public Keyword getNameKeyword_2_0() { return cNameKeyword_2_0; }
		
		//name=EString
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_1_0() { return cNameEStringParserRuleCall_2_1_0; }
		
		//'output:'
		public Keyword getOutputKeyword_3() { return cOutputKeyword_3; }
		
		//output=EString
		public Assignment getOutputAssignment_4() { return cOutputAssignment_4; }
		
		//EString
		public RuleCall getOutputEStringParserRuleCall_4_0() { return cOutputEStringParserRuleCall_4_0; }
		
		//'input:'
		public Keyword getInputKeyword_5() { return cInputKeyword_5; }
		
		//column=[Column|EString]
		public Assignment getColumnAssignment_6() { return cColumnAssignment_6; }
		
		//[Column|EString]
		public CrossReference getColumnColumnCrossReference_6_0() { return cColumnColumnCrossReference_6_0; }
		
		//EString
		public RuleCall getColumnColumnEStringParserRuleCall_6_0_1() { return cColumnColumnEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class NestingListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.NestingList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNestingListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cNESTING_LISTKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cOutputKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOutputAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOutputEStringParserRuleCall_5_0 = (RuleCall)cOutputAssignment_5.eContents().get(0);
		private final Keyword cInputsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cForeignkeyAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cForeignkeyForeignKeyCrossReference_7_0 = (CrossReference)cForeignkeyAssignment_7.eContents().get(0);
		private final RuleCall cForeignkeyForeignKeyEStringParserRuleCall_7_0_1 = (RuleCall)cForeignkeyForeignKeyCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cColumnsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cColumnsColumnCrossReference_8_1_0 = (CrossReference)cColumnsAssignment_8_1.eContents().get(0);
		private final RuleCall cColumnsColumnEStringParserRuleCall_8_1_0_1 = (RuleCall)cColumnsColumnCrossReference_8_1_0.eContents().get(1);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cColumnsAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final CrossReference cColumnsColumnCrossReference_8_2_1_0 = (CrossReference)cColumnsAssignment_8_2_1.eContents().get(0);
		private final RuleCall cColumnsColumnEStringParserRuleCall_8_2_1_0_1 = (RuleCall)cColumnsColumnCrossReference_8_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cASKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cFieldsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final CrossReference cFieldsFieldCrossReference_9_2_0 = (CrossReference)cFieldsAssignment_9_2.eContents().get(0);
		private final RuleCall cFieldsFieldEStringParserRuleCall_9_2_0_1 = (RuleCall)cFieldsFieldCrossReference_9_2_0.eContents().get(1);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cFieldsAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final CrossReference cFieldsFieldCrossReference_9_3_1_0 = (CrossReference)cFieldsAssignment_9_3_1.eContents().get(0);
		private final RuleCall cFieldsFieldEStringParserRuleCall_9_3_1_0_1 = (RuleCall)cFieldsFieldCrossReference_9_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//NestingList returns NestingList:
		//    {NestingList}
		//    '{'
		//        (name=EString)?
		//        'NESTING_LIST'
		//        'output:' output=EString
		//        'inputs:' foreignkey=[ForeignKey|EString] ('(' columns+=[Column|EString] ( "," columns+=[Column|EString])* ')' )?
		//        ('AS' '(' fields+=[Field|EString] ( "," fields+=[Field|EString])* ')' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{NestingList}
		//'{'
		//    (name=EString)?
		//    'NESTING_LIST'
		//    'output:' output=EString
		//    'inputs:' foreignkey=[ForeignKey|EString] ('(' columns+=[Column|EString] ( "," columns+=[Column|EString])* ')' )?
		//    ('AS' '(' fields+=[Field|EString] ( "," fields+=[Field|EString])* ')' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{NestingList}
		public Action getNestingListAction_0() { return cNestingListAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(name=EString)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'NESTING_LIST'
		public Keyword getNESTING_LISTKeyword_3() { return cNESTING_LISTKeyword_3; }
		
		//'output:'
		public Keyword getOutputKeyword_4() { return cOutputKeyword_4; }
		
		//output=EString
		public Assignment getOutputAssignment_5() { return cOutputAssignment_5; }
		
		//EString
		public RuleCall getOutputEStringParserRuleCall_5_0() { return cOutputEStringParserRuleCall_5_0; }
		
		//'inputs:'
		public Keyword getInputsKeyword_6() { return cInputsKeyword_6; }
		
		//foreignkey=[ForeignKey|EString]
		public Assignment getForeignkeyAssignment_7() { return cForeignkeyAssignment_7; }
		
		//[ForeignKey|EString]
		public CrossReference getForeignkeyForeignKeyCrossReference_7_0() { return cForeignkeyForeignKeyCrossReference_7_0; }
		
		//EString
		public RuleCall getForeignkeyForeignKeyEStringParserRuleCall_7_0_1() { return cForeignkeyForeignKeyEStringParserRuleCall_7_0_1; }
		
		//('(' columns+=[Column|EString] ( "," columns+=[Column|EString])* ')' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_0() { return cLeftParenthesisKeyword_8_0; }
		
		//columns+=[Column|EString]
		public Assignment getColumnsAssignment_8_1() { return cColumnsAssignment_8_1; }
		
		//[Column|EString]
		public CrossReference getColumnsColumnCrossReference_8_1_0() { return cColumnsColumnCrossReference_8_1_0; }
		
		//EString
		public RuleCall getColumnsColumnEStringParserRuleCall_8_1_0_1() { return cColumnsColumnEStringParserRuleCall_8_1_0_1; }
		
		//( "," columns+=[Column|EString])*
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }
		
		//columns+=[Column|EString]
		public Assignment getColumnsAssignment_8_2_1() { return cColumnsAssignment_8_2_1; }
		
		//[Column|EString]
		public CrossReference getColumnsColumnCrossReference_8_2_1_0() { return cColumnsColumnCrossReference_8_2_1_0; }
		
		//EString
		public RuleCall getColumnsColumnEStringParserRuleCall_8_2_1_0_1() { return cColumnsColumnEStringParserRuleCall_8_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_3() { return cRightParenthesisKeyword_8_3; }
		
		//('AS' '(' fields+=[Field|EString] ( "," fields+=[Field|EString])* ')' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'AS'
		public Keyword getASKeyword_9_0() { return cASKeyword_9_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_9_1() { return cLeftParenthesisKeyword_9_1; }
		
		//fields+=[Field|EString]
		public Assignment getFieldsAssignment_9_2() { return cFieldsAssignment_9_2; }
		
		//[Field|EString]
		public CrossReference getFieldsFieldCrossReference_9_2_0() { return cFieldsFieldCrossReference_9_2_0; }
		
		//EString
		public RuleCall getFieldsFieldEStringParserRuleCall_9_2_0_1() { return cFieldsFieldEStringParserRuleCall_9_2_0_1; }
		
		//( "," fields+=[Field|EString])*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//fields+=[Field|EString]
		public Assignment getFieldsAssignment_9_3_1() { return cFieldsAssignment_9_3_1; }
		
		//[Field|EString]
		public CrossReference getFieldsFieldCrossReference_9_3_1_0() { return cFieldsFieldCrossReference_9_3_1_0; }
		
		//EString
		public RuleCall getFieldsFieldEStringParserRuleCall_9_3_1_0_1() { return cFieldsFieldEStringParserRuleCall_9_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9_4() { return cRightParenthesisKeyword_9_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class NestingObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.NestingObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNestingObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cNESTING_OBJECTKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cOutputKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOutputAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOutputEStringParserRuleCall_5_0 = (RuleCall)cOutputAssignment_5.eContents().get(0);
		private final Keyword cInputsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cForeignkeyAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cForeignkeyForeignKeyCrossReference_7_0 = (CrossReference)cForeignkeyAssignment_7.eContents().get(0);
		private final RuleCall cForeignkeyForeignKeyEStringParserRuleCall_7_0_1 = (RuleCall)cForeignkeyForeignKeyCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cColumnsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cColumnsColumnCrossReference_8_1_0 = (CrossReference)cColumnsAssignment_8_1.eContents().get(0);
		private final RuleCall cColumnsColumnEStringParserRuleCall_8_1_0_1 = (RuleCall)cColumnsColumnCrossReference_8_1_0.eContents().get(1);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cColumnsAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final CrossReference cColumnsColumnCrossReference_8_2_1_0 = (CrossReference)cColumnsAssignment_8_2_1.eContents().get(0);
		private final RuleCall cColumnsColumnEStringParserRuleCall_8_2_1_0_1 = (RuleCall)cColumnsColumnCrossReference_8_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cASKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cFieldsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final CrossReference cFieldsFieldCrossReference_9_2_0 = (CrossReference)cFieldsAssignment_9_2.eContents().get(0);
		private final RuleCall cFieldsFieldEStringParserRuleCall_9_2_0_1 = (RuleCall)cFieldsFieldCrossReference_9_2_0.eContents().get(1);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cFieldsAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final CrossReference cFieldsFieldCrossReference_9_3_1_0 = (CrossReference)cFieldsAssignment_9_3_1.eContents().get(0);
		private final RuleCall cFieldsFieldEStringParserRuleCall_9_3_1_0_1 = (RuleCall)cFieldsFieldCrossReference_9_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//NestingObject returns NestingObject:
		//    {NestingObject}
		//    '{'
		//        (name=EString)?
		//        'NESTING_OBJECT'
		//        'output:' output=EString
		//        'inputs:' foreignkey=[ForeignKey|EString] ('(' columns+=[Column|EString] ( "," columns+=[Column|EString])* ')' )?
		//        ('AS' '(' fields+=[Field|EString] ( "," fields+=[Field|EString])* ')' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{NestingObject}
		//'{'
		//    (name=EString)?
		//    'NESTING_OBJECT'
		//    'output:' output=EString
		//    'inputs:' foreignkey=[ForeignKey|EString] ('(' columns+=[Column|EString] ( "," columns+=[Column|EString])* ')' )?
		//    ('AS' '(' fields+=[Field|EString] ( "," fields+=[Field|EString])* ')' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{NestingObject}
		public Action getNestingObjectAction_0() { return cNestingObjectAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(name=EString)?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'NESTING_OBJECT'
		public Keyword getNESTING_OBJECTKeyword_3() { return cNESTING_OBJECTKeyword_3; }
		
		//'output:'
		public Keyword getOutputKeyword_4() { return cOutputKeyword_4; }
		
		//output=EString
		public Assignment getOutputAssignment_5() { return cOutputAssignment_5; }
		
		//EString
		public RuleCall getOutputEStringParserRuleCall_5_0() { return cOutputEStringParserRuleCall_5_0; }
		
		//'inputs:'
		public Keyword getInputsKeyword_6() { return cInputsKeyword_6; }
		
		//foreignkey=[ForeignKey|EString]
		public Assignment getForeignkeyAssignment_7() { return cForeignkeyAssignment_7; }
		
		//[ForeignKey|EString]
		public CrossReference getForeignkeyForeignKeyCrossReference_7_0() { return cForeignkeyForeignKeyCrossReference_7_0; }
		
		//EString
		public RuleCall getForeignkeyForeignKeyEStringParserRuleCall_7_0_1() { return cForeignkeyForeignKeyEStringParserRuleCall_7_0_1; }
		
		//('(' columns+=[Column|EString] ( "," columns+=[Column|EString])* ')' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_0() { return cLeftParenthesisKeyword_8_0; }
		
		//columns+=[Column|EString]
		public Assignment getColumnsAssignment_8_1() { return cColumnsAssignment_8_1; }
		
		//[Column|EString]
		public CrossReference getColumnsColumnCrossReference_8_1_0() { return cColumnsColumnCrossReference_8_1_0; }
		
		//EString
		public RuleCall getColumnsColumnEStringParserRuleCall_8_1_0_1() { return cColumnsColumnEStringParserRuleCall_8_1_0_1; }
		
		//( "," columns+=[Column|EString])*
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }
		
		//columns+=[Column|EString]
		public Assignment getColumnsAssignment_8_2_1() { return cColumnsAssignment_8_2_1; }
		
		//[Column|EString]
		public CrossReference getColumnsColumnCrossReference_8_2_1_0() { return cColumnsColumnCrossReference_8_2_1_0; }
		
		//EString
		public RuleCall getColumnsColumnEStringParserRuleCall_8_2_1_0_1() { return cColumnsColumnEStringParserRuleCall_8_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_3() { return cRightParenthesisKeyword_8_3; }
		
		//('AS' '(' fields+=[Field|EString] ( "," fields+=[Field|EString])* ')' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'AS'
		public Keyword getASKeyword_9_0() { return cASKeyword_9_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_9_1() { return cLeftParenthesisKeyword_9_1; }
		
		//fields+=[Field|EString]
		public Assignment getFieldsAssignment_9_2() { return cFieldsAssignment_9_2; }
		
		//[Field|EString]
		public CrossReference getFieldsFieldCrossReference_9_2_0() { return cFieldsFieldCrossReference_9_2_0; }
		
		//EString
		public RuleCall getFieldsFieldEStringParserRuleCall_9_2_0_1() { return cFieldsFieldEStringParserRuleCall_9_2_0_1; }
		
		//( "," fields+=[Field|EString])*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//fields+=[Field|EString]
		public Assignment getFieldsAssignment_9_3_1() { return cFieldsAssignment_9_3_1; }
		
		//[Field|EString]
		public CrossReference getFieldsFieldCrossReference_9_3_1_0() { return cFieldsFieldCrossReference_9_3_1_0; }
		
		//EString
		public RuleCall getFieldsFieldEStringParserRuleCall_9_3_1_0_1() { return cFieldsFieldEStringParserRuleCall_9_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9_4() { return cRightParenthesisKeyword_9_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	public class FieldTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.FieldType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBasicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBasicBasicKeyword_0_0 = (Keyword)cBasicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cListFieldEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cListFieldListFieldKeyword_1_0 = (Keyword)cListFieldEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cObjectFieldEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cObjectFieldObjectFieldKeyword_2_0 = (Keyword)cObjectFieldEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum FieldType returns FieldType:
		//    Basic = 'Basic' | ListField = 'ListField' | ObjectField = 'ObjectField';
		public EnumRule getRule() { return rule; }
		
		//Basic = 'Basic' | ListField = 'ListField' | ObjectField = 'ObjectField'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Basic = 'Basic'
		public EnumLiteralDeclaration getBasicEnumLiteralDeclaration_0() { return cBasicEnumLiteralDeclaration_0; }
		
		//'Basic'
		public Keyword getBasicBasicKeyword_0_0() { return cBasicBasicKeyword_0_0; }
		
		//ListField = 'ListField'
		public EnumLiteralDeclaration getListFieldEnumLiteralDeclaration_1() { return cListFieldEnumLiteralDeclaration_1; }
		
		//'ListField'
		public Keyword getListFieldListFieldKeyword_1_0() { return cListFieldListFieldKeyword_1_0; }
		
		//ObjectField = 'ObjectField'
		public EnumLiteralDeclaration getObjectFieldEnumLiteralDeclaration_2() { return cObjectFieldEnumLiteralDeclaration_2; }
		
		//'ObjectField'
		public Keyword getObjectFieldObjectFieldKeyword_2_0() { return cObjectFieldObjectFieldKeyword_2_0; }
	}
	
	private final MigrationElements pMigration;
	private final OptionsElements pOptions;
	private final ConstraintElements pConstraint;
	private final RelationalDbElements pRelationalDb;
	private final MongoDbElements pMongoDb;
	private final EStringElements pEString;
	private final TableElements pTable;
	private final ColumnElements pColumn;
	private final UniqueElements pUnique;
	private final NotNullElements pNotNull;
	private final PrimaryKeyElements pPrimaryKey;
	private final ForeignKeyElements pForeignKey;
	private final MngCollectionElements pMngCollection;
	private final FieldElements pField;
	private final FieldTypeElements eFieldType;
	private final MappingElements pMapping;
	private final DirectMappingElements pDirectMapping;
	private final NestingListElements pNestingList;
	private final NestingObjectElements pNestingObject;
	private final EBooleanElements pEBoolean;
	private final TerminalRule tNEWLINE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MigDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMigration = new MigrationElements();
		this.pOptions = new OptionsElements();
		this.pConstraint = new ConstraintElements();
		this.pRelationalDb = new RelationalDbElements();
		this.pMongoDb = new MongoDbElements();
		this.pEString = new EStringElements();
		this.pTable = new TableElements();
		this.pColumn = new ColumnElements();
		this.pUnique = new UniqueElements();
		this.pNotNull = new NotNullElements();
		this.pPrimaryKey = new PrimaryKeyElements();
		this.pForeignKey = new ForeignKeyElements();
		this.pMngCollection = new MngCollectionElements();
		this.pField = new FieldElements();
		this.eFieldType = new FieldTypeElements();
		this.pMapping = new MappingElements();
		this.pDirectMapping = new DirectMappingElements();
		this.pNestingList = new NestingListElements();
		this.pNestingObject = new NestingObjectElements();
		this.pEBoolean = new EBooleanElements();
		this.tNEWLINE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "xtext.MigDsl.NEWLINE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("xtext.MigDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Migration returns Migration:
	//    {Migration}
	//    'mappings' '{' (mappings+=Mapping)* '}'
	//    (relationaldb=RelationalDb)?
	//    (mongodb=MongoDb)?
	//    (options=Options)?
	//    ;
	public MigrationElements getMigrationAccess() {
		return pMigration;
	}
	
	public ParserRule getMigrationRule() {
		return getMigrationAccess().getRule();
	}
	
	//Options returns Options:
	//    NEWLINE 'options'
	//    DataTypeMigration?='DataTypeMigration'
	//    AllowAdditionalFields?='AllowAdditionalFields'
	//    ;
	public OptionsElements getOptionsAccess() {
		return pOptions;
	}
	
	public ParserRule getOptionsRule() {
		return getOptionsAccess().getRule();
	}
	
	//Constraint returns Constraint:
	//    Unique | NotNull | PrimaryKey | ForeignKey;
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//RelationalDb returns RelationalDb:
	//    NEWLINE 'source' NEWLINE
	//    (db=EString)? '/'(host=EString)? '/'(port=EString)? '/'(username=EString)? '/'(password=EString)?
	//    (
	//     NEWLINE tables+=Table (
	//     NEWLINE tables+=Table)*
	//    )
	//    NEWLINE 'constraints'
	//    (
	//     NEWLINE constraints+=Constraint (
	//     NEWLINE constraints+=Constraint)*
	//    )
	//    ;
	public RelationalDbElements getRelationalDbAccess() {
		return pRelationalDb;
	}
	
	public ParserRule getRelationalDbRule() {
		return getRelationalDbAccess().getRule();
	}
	
	//MongoDb returns MongoDb:
	//    {MongoDb}
	//    NEWLINE
	//    'target' NEWLINE
	//    (db=EString)? '/'(host=EString)? '/'(port=EString)? '/'(username=EString)? '/'(password=EString)?
	//    (
	//    NEWLINE collections+=MngCollection (
	//    NEWLINE collections+=MngCollection    )*
	//    )?
	//    ;
	public MongoDbElements getMongoDbAccess() {
		return pMongoDb;
	}
	
	public ParserRule getMongoDbRule() {
		return getMongoDbAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Table returns Table:
	//    {Table}
	//    name=EString
	//    '(' (columns+=Column ( "," columns+=Column)*)? ')'
	//    ;
	public TableElements getTableAccess() {
		return pTable;
	}
	
	public ParserRule getTableRule() {
		return getTableAccess().getRule();
	}
	
	//Column returns Column:
	//    {Column}
	//    name=EString;
	public ColumnElements getColumnAccess() {
		return pColumn;
	}
	
	public ParserRule getColumnRule() {
		return getColumnAccess().getRule();
	}
	
	//Unique returns Unique:
	//    'Unique:'
	//    name=EString
	//    'uniqueColumns' '(' uniqueColumns+=[Column|EString] ( "," uniqueColumns+=[Column|EString])* ')'
	//    ;
	public UniqueElements getUniqueAccess() {
		return pUnique;
	}
	
	public ParserRule getUniqueRule() {
		return getUniqueAccess().getRule();
	}
	
	//NotNull returns NotNull:
	//    'NotNull:'
	//    name=EString
	//    'column' column=[Column|EString]
	//    ;
	public NotNullElements getNotNullAccess() {
		return pNotNull;
	}
	
	public ParserRule getNotNullRule() {
		return getNotNullAccess().getRule();
	}
	
	//PrimaryKey returns PrimaryKey:
	//    'PK:'
	//    name=EString
	//    'keyColumns' '(' keyColumns+=[Column|EString] ( "," keyColumns+=[Column|EString])* ')'
	//    ;
	public PrimaryKeyElements getPrimaryKeyAccess() {
		return pPrimaryKey;
	}
	
	public ParserRule getPrimaryKeyRule() {
		return getPrimaryKeyAccess().getRule();
	}
	
	//ForeignKey returns ForeignKey:
	//    name=EString
	//    referencing+=[Column|EString] ( "," referencing+=[Column|EString])* 'REFERENCES' refrenced+=[Column|EString] ( "," refrenced+=[Column|EString])*
	//    ;
	public ForeignKeyElements getForeignKeyAccess() {
		return pForeignKey;
	}
	
	public ParserRule getForeignKeyRule() {
		return getForeignKeyAccess().getRule();
	}
	
	//MngCollection returns MngCollection:
	//    {MngCollection}
	//    name=EString
	//    '{'
	//        ( fields+=Field ("," fields+=Field)* )?
	//    '}';
	public MngCollectionElements getMngCollectionAccess() {
		return pMngCollection;
	}
	
	public ParserRule getMngCollectionRule() {
		return getMngCollectionAccess().getRule();
	}
	
	//Field returns Field:
	//    {Field}
	//    (type=FieldType)?
	//    name=EString
	//    ('{' fields+=Field ("," fields+=Field)* '}' )?
	//    ;
	public FieldElements getFieldAccess() {
		return pField;
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}
	
	//enum FieldType returns FieldType:
	//    Basic = 'Basic' | ListField = 'ListField' | ObjectField = 'ObjectField';
	public FieldTypeElements getFieldTypeAccess() {
		return eFieldType;
	}
	
	public EnumRule getFieldTypeRule() {
		return getFieldTypeAccess().getRule();
	}
	
	//Mapping returns Mapping:
	//    DirectMapping | NestingList | NestingObject;
	public MappingElements getMappingAccess() {
		return pMapping;
	}
	
	public ParserRule getMappingRule() {
		return getMappingAccess().getRule();
	}
	
	//DirectMapping returns DirectMapping:
	//    {DirectMapping}
	//    '{'
	//        ('name:' name=EString)?
	//        'output:' output=EString
	//        'input:' column=[Column|EString]
	//    '}';
	public DirectMappingElements getDirectMappingAccess() {
		return pDirectMapping;
	}
	
	public ParserRule getDirectMappingRule() {
		return getDirectMappingAccess().getRule();
	}
	
	//NestingList returns NestingList:
	//    {NestingList}
	//    '{'
	//        (name=EString)?
	//        'NESTING_LIST'
	//        'output:' output=EString
	//        'inputs:' foreignkey=[ForeignKey|EString] ('(' columns+=[Column|EString] ( "," columns+=[Column|EString])* ')' )?
	//        ('AS' '(' fields+=[Field|EString] ( "," fields+=[Field|EString])* ')' )?
	//    '}';
	public NestingListElements getNestingListAccess() {
		return pNestingList;
	}
	
	public ParserRule getNestingListRule() {
		return getNestingListAccess().getRule();
	}
	
	//NestingObject returns NestingObject:
	//    {NestingObject}
	//    '{'
	//        (name=EString)?
	//        'NESTING_OBJECT'
	//        'output:' output=EString
	//        'inputs:' foreignkey=[ForeignKey|EString] ('(' columns+=[Column|EString] ( "," columns+=[Column|EString])* ')' )?
	//        ('AS' '(' fields+=[Field|EString] ( "," fields+=[Field|EString])* ')' )?
	//    '}';
	public NestingObjectElements getNestingObjectAccess() {
		return pNestingObject;
	}
	
	public ParserRule getNestingObjectRule() {
		return getNestingObjectAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	////terminal NEWLINE: '-' ('\r'? '\n')+;
	////terminal NEWLINE: 'NEWLINE';
	//terminal NEWLINE: '-' '\n' '-';
	public TerminalRule getNEWLINERule() {
		return tNEWLINE;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
